#include <cpen333/process/subprocess.h>
#include <cpen333/process/shared_memory.h>
#include <chrono>
#include <thread>
#include <string>
#include <iostream>

// Usage:
//    malware <name> <index>
// name is any name
// index is 0 or 1
// defaults to name:malware, index:0
int main(int argc, char* argv[]) {

  // extract name and index
  int index = 0;
  std::string name = "malware";
  if (argc > 1) {
    name = argv[1];
  }
  if (argc > 2) {
    index = std::atoi(argv[2]);
  }

  std::cout << name << " " << std::to_string(index)  << " started" << std::endl;

  //========================================================
  // TODO: CREATE AND INITIALIZE SHARED MEMORY
  //========================================================

  int oindex = (index+1)%2;  // index of other malware process

  while(true) {
    std::cout << name << " " << std::to_string(index)  << " running" << std::endl;

    //=======================================================
    // TODO: CHECK IF OTHER PROCESS MISSED CHECK-IN(S)
    //       - LAUNCH IF NOT RESPONDING
    //=======================================================

    std::this_thread::sleep_for(std::chrono::seconds(10));
  }

  return 0;
}